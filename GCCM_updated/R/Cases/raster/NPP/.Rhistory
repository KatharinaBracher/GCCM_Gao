load("D:/E盘/paper/3/前期2/资料/0按照方向的GCCM代码最新版/npp.RData")
xNames<-c("pre10km","tem10km1") #""
##################00要改#############################
xName<-xNames[1]##降雨是1  气温是2
yName<-"NPP"
yMatrix<-nppImage
##################01要改#############################
# lib_sizes<-20
lib_sizes<-seq(20,300,20)
# lib_sizes<-20  # library sizes, will be the horizontal ordinate  of the reulst plot.Note here the lib_size is the window size
# The largest value ('to' parameter) can be set to the largest size of immage (the minor of width and length)
# the 'by' can be set by takning accout to the computation time
##################02要改#############################
E<-2             # the dimensions of the embedings
lib<-NULL
imageSize<-dim(yMatrix)
totalRow<-imageSize[1]     #Get the row number of image
totalCol<-imageSize[2]     #Get the collumn number of image
predRows<-seq(10,totalRow,10)
predCols<-seq(10,totalCol,10)   #To save the computation time, not every pixels are predict. The results are almost the same due to the spatial autocorrealtion
pred<-merge(predRows,predCols)
#plot(yImage)
coodsX<-seq(1,totalRow)
coodsY<-seq(1,totalCol)
coords<-merge(coodsX,coodsY)
colnames(coords)<-c("coordX","coodY")
y<-as.vector(yMatrix)
lmModel<-lm(y ~ coordX+coodY, cbind(y,coords))  #remove the linear trend of y
prediction<-predict(lmModel,coords)
y<-y-prediction
yMatrixM<-matrix(y,nrow = totalRow, ncol = totalCol)
# for(c in seq(1:length(climateImages)))
# {
###################03要改#############################
xMatrix<- climateImages[[1]]  ##降雨是1  气温是2
x<-as.vector(xMatrix)
lmModel<-lm(x ~ coordX+coodY, cbind(x,coords))    #remove the linear trend of x
prediction<-predict(lmModel,coords)
x<-x-prediction
xMatrixM<-matrix(x,nrow = totalRow, ncol = totalCol)
save.image("D:/E盘/paper/3/前期2/资料/0按照方向的GCCM代码最新版/testdata.RData")
xMatrix<-xMatrixM
View(xMatrixM)
View(xMatrix)
yMatrix<-yMatrixM
lib_sizes
lib
pred
E
tau = 1
b = E+2
b
winStepRatio=0
winStepRatio
cores=NULL
cores
dir=0
validRatio=0
validRatio
save.image("D:/E盘/paper/3/前期2/资料/0按照方向的GCCM代码最新版/testdata.RData")
imageSize<-dim(xMatrix)
totalRow<-imageSize[1]
totalCol<-imageSize[2]
yPred<- as.vector(t(yMatrix))
yPred
xEmbedings<-list()
xEmbedings[[1]]<- as.vector(t(xMatrix))
View(xEmbedings)
# GCCM<-function(xMatrix, yMatrix, lib_sizes, lib, pred, E, tau = 1, b = E+2, winStepRatio=0,cores=NULL,dir=0,validRatio=0)
GCCM<-function(xMatrix, yMatrix, lib_sizes, lib, pred, E, tau = 1, b = E+2, winStepRatio=0,cores=NULL,dir=0,validRatio=0)
{
cat(paste("xMatrix =", xMatrix),"\n")
cat(paste("yMatrix =", yMatrix),"\n")
cat(paste("lib_sizes =", lib_sizes),"\n")
cat(paste("lib =", lib),"\n")
cat(paste("pred =", pred),"\n")
cat(paste("E =", E),"\n")
cat(paste("tau =", tau),"\n")
cat(paste("b =", b),"\n")
cat(paste("winStepRatio =", winStepRatio),"\n")
cat(paste("cores =", cores),"\n")
cat(paste("dir =", dir),"\n")
cat(paste("validRatio =", validRatio),"\n")
}
xMatrix<-1
yMatrix<-2
lib_sizes<-3
lib<-4
pred<-5
E<-999
GCCM(xMatrix, yMatrix, lib_sizes, lib, pred, E,tau = 1,b,winStepRatio = 0,cores=8,dir=0)
# GCCM<-function(xMatrix, yMatrix, lib_sizes, lib, pred, E, tau = 1, b = E+2, winStepRatio=0,cores=NULL,dir=0,validRatio=0)
GCCM<-function(xMatrix, yMatrix, lib_sizes, lib, pred, E, tau = 1, b = E+2, winStepRatio=0,cores=NULL,dir=0,validRatio=0)
{
cat(paste("xMatrix =", xMatrix),"\n")
cat(paste("yMatrix =", yMatrix),"\n")
cat(paste("lib_sizes =", lib_sizes),"\n")
cat(paste("lib =", lib),"\n")
cat(paste("pred =", pred),"\n")
cat(paste("E =", E),"\n")
cat(paste("tau =", tau),"\n")
cat(paste("b =", b),"\n")
cat(paste("winStepRatio =", winStepRatio),"\n")
cat(paste("cores =", cores),"\n")
cat(paste("dir =", dir),"\n")
cat(paste("validRatio =", validRatio),"\n")
}
xMatrix<-1
yMatrix<-2
lib_sizes<-3
lib<-4
pred<-5
E<-999
GCCM(xMatrix, yMatrix, lib_sizes, lib, pred, E,tau = 1,b,winStepRatio = 0,cores=8,dir=0)
# GCCM<-function(xMatrix, yMatrix, lib_sizes, lib, pred, E, tau = 1, b = E+2, winStepRatio=0,cores=NULL,dir=0,validRatio=0)
GCCM<-function(xMatrix, yMatrix, lib_sizes, lib, pred, E, tau = 1, b = E+2, winStepRatio=0,cores=NULL,dir=0,validRatio=0)
{
cat(paste("xMatrix =", xMatrix),"\n")
cat(paste("yMatrix =", yMatrix),"\n")
cat(paste("lib_sizes =", lib_sizes),"\n")
cat(paste("lib =", lib),"\n")
cat(paste("pred =", pred),"\n")
cat(paste("E =", E),"\n")
cat(paste("tau =", tau),"\n")
cat(paste("b =", b),"\n")
cat(paste("winStepRatio =", winStepRatio),"\n")
cat(paste("cores =", cores),"\n")
cat(paste("dir =", dir),"\n")
cat(paste("validRatio =", validRatio),"\n")
}
xMatrix<-1
yMatrix<-2
lib_sizes<-3
lib<-4
pred<-5
E<-999
b<-E+3
GCCM(xMatrix, yMatrix, lib_sizes, lib, pred, E,tau = 1,b,winStepRatio = 0,cores=8,dir=0)
# GCCM<-function(xMatrix, yMatrix, lib_sizes, lib, pred, E, tau = 1, b = E+2, winStepRatio=0,cores=NULL,dir=0,validRatio=0)
# GCCM<-function(xMatrix, yMatrix, lib_sizes, lib, pred, E, tau = 1, b = E+2, winStepRatio=0,cores=NULL,dir=0,validRatio=0)
# GCCM<-function(xMatrix, yMatrix, lib_sizes, lib, pred, E, tau = 1, b = E+2, winStepRatio=0,cores=NULL,dir=0,validRatio=0)
GCCM<-function(xMatrix, yMatrix, lib_sizes, lib, pred, E, tau = 1, b = E+2, winStepRatio=0,cores=NULL,dir=0,validRatio=0)
{
cat(paste("xMatrix =", xMatrix),"\n")
cat(paste("yMatrix =", yMatrix),"\n")
cat(paste("lib_sizes =", lib_sizes),"\n")
cat(paste("lib =", lib),"\n")
cat(paste("pred =", pred),"\n")
cat(paste("E =", E),"\n")
cat(paste("tau =", tau),"\n")
cat(paste("b =", b),"\n")
cat(paste("winStepRatio =", winStepRatio),"\n")
cat(paste("cores =", cores),"\n")
cat(paste("dir =", dir),"\n")
cat(paste("validRatio =", validRatio),"\n")
}
xMatrix<-1
yMatrix<-2
lib_sizes<-3
lib<-4
pred<-5
E<-999
b<-E+999
# GCCM<-function(xMatrix, yMatrix, lib_sizes, lib, pred, E, tau = 1, b = E+2, winStepRatio=0,cores=NULL,dir=0,validRatio=0)
# GCCM(xMatrix, yMatrix, lib_sizes, lib, pred, E,tau = 1,b,winStepRatio = 0,cores=8,dir=0)
GCCM(xMatrix, yMatrix, lib_sizes, lib, pred, E,tau = 1,b,winStepRatio = 0,cores=8,dir=0)
# GCCM<-function(xMatrix, yMatrix, lib_sizes, lib, pred, E, tau = 1, b = E+2, winStepRatio=0,cores=NULL,dir=0,validRatio=0)
# GCCM(xMatrix, yMatrix, lib_sizes, lib, pred, E,tau = 1,b,winStepRatio = 0,cores=8,dir=0)
GCCM(xMatrix, yMatrix, lib_sizes, lib, pred, E,tau = 1,b,winStepRatio = 0,cores=8,dir=0)
load("D:/研/wroking/2024zong/202411/000老师data/00上传github/测试OA区结果/0无噪声/OA-CuCdMgPbEnvi.RData")
Cu<-HMImages[[1]]
Cd<-HMImages[[2]]
Mg<-HMImages[[3]]
Pb<-HMImages[[4]]
max(Cd)
min(Cd)
max(Mg)
min(Mg)
max(Pb)
min(Pb)
max(Cu)
min(Cu)
max(EnviImages[[1]])
max(EnviImages[[2]])
library(parallel)
library(foreach)
library(doParallel)
xImage<-readGDAL("D:\\研\\wroking\\2024zong\\202411\\000老师data\\00上传github\\测试OA区结果\\OA区b=E+2E=3winstepratio=0代码数据与结果汇总\\OA区b=E+2E=3winstepratio=0代码数据与结果汇总\\数据\\HM\\oACd2.tif")
library(parallel)
library(foreach)
library(doParallel)
library(rgdal)
xImage<-readGDAL("D:\\研\\wroking\\2024zong\\202411\\000老师data\\00上传github\\测试OA区结果\\OA区b=E+2E=3winstepratio=0代码数据与结果汇总\\OA区b=E+2E=3winstepratio=0代码数据与结果汇总\\数据\\HM\\oACd2.tif")
plot(xImage)
setwd("D:\\研\\wroking\\2024zong\\202411\\000老师data\\00上传github\\测试OA区结果\\OA区b=E+2E=3winstepratio=0代码数据与结果汇总\\OA区b=E+2E=3winstepratio=0代码数据与结果汇总\\数据\\HM")
library(parallel)
library(foreach)
library(doParallel)
library(rgdal)
CuImage<-readGDAL("OA_Cu1.tif")
plot(xImage)
setwd("D:\\研\\wroking\\2024zong\\202411\\000老师data\\00上传github\\测试OA区结果\\OA区b=E+2E=3winstepratio=0代码数据与结果汇总\\OA区b=E+2E=3winstepratio=0代码数据与结果汇总\\数据")
library(parallel)
library(foreach)
library(doParallel)
library(rgdal)
CuImage<-readGDAL("HM\\OA_Cu1.tif")
setwd("D:\\研\\wroking\\2024zong\\202411\\000老师data\\00上传github\\测试OA区结果\\OA区b=E+2E=3winstepratio=0代码数据与结果汇总\\OA区b=E+2E=3winstepratio=0代码数据与结果汇总\\数据")
library(parallel)
library(foreach)
library(doParallel)
library(rgdal)
CuImage<-readGDAL("HM\\OA_Cu1.tif")
nlimage<-readGDAL("Envi\\0a-nlightNoDataTo0.tif")
factoriamge<-readGDAL("Envi\\2w.tif")
load("D:/研/wroking/2024zong/202411/000老师data/00上传github/资料/GCCM_updated/R/Cases/raster/Heavymetal/代码用Rdata/OA-CuEnvi.RData")
Cuimage2<-HMImages[[1]]
View(Cuimage2)
View(CuImage)
Cu<-as.matrix(CuImage)
View(Cu)
View(Cuimage2)
max(Cu)
max(Cuimage2)
nightlight<-as.matrix(nlimage)
View(nightlight)
nightlight2<-EnviImages[[1]]
View(nightlight2)
View(nightlight)
max(nightlight)
max(nightlight2)
load("D:/研/wroking/2024zong/202411/000老师data/00上传github/测试OA区结果/OA区b=E+2E=3winstepratio=0代码数据与结果汇总/OA区b=E+2E=3winstepratio=0代码数据与结果汇总/数据/代码用Rdata/OA-CuEnvi.RData")
setwd("D:\\研\\wroking\\2024zong\\202411\\000老师data\\00上传github\\资料\\GCCM_updated\\R\\Cases\\raster\\Heavymetal")
library(rgdal)
library(raster)
HMs<-c("Cu")
Envs<-c("Nightlight","factorydensity")
HMImages<-list()
for(h in seq(1:length(HMs)))
{
fileName<-paste("HM\\",HMs[h],".tif",sep = "")
HMImages[[h]]<-as.matrix(readGDAL(fileName))
}
EnviImages<-list()
for(e in seq(1:length(Envs)))
{
fileName<-paste("Envi\\",Envs[e],".tif",sep = "")
EnviImages[[e]]<-as.matrix(readGDAL(fileName))
}
save(HMImages,EnviImages,file="CuEnvi.RData")
load("D:/研/wroking/2024zong/202411/000老师data/00上传github/资料/GCCM_updated/R/Cases/raster/Heavymetal/CuEnvi.RData")
max(HMImages[[1]])
min(HMImages[[1]])
max(EnviImages[[1]])
max(EnviImages[[2]])
setwd("D:\\wroking")
setwd("E:\\Study\\R\\spatial-causality\\R\\GCCM_updated\\Cases\\raster\\Heavymetal")
library(parallel)
library(foreach)
library(doParallel)
source("..\\..\\..\\GCCM\\basic.r")
source("..\\..\\..\\GCCM\\GCCM.r")
load("CuEnvi.RData")
setwd("E:\\Study\\R\\spatial-causality\\R\\GCCM_updated\\Cases\\raster\\NPP")
library(parallel)
library(foreach)
setwd("E:\\Study\\R\\spatial-causality\\newcodes\\GCCM_updated\\R\\Cases\\polygon")
source("..\\..\\GCCM\\GCCM4Lattice.r")
source("..\\..\\GCCM\\basic.r")
setwd("E:\\Study\\R\\spatial-causality\\newcodes\\GCCM_updated\\R\\Cases\\raster\\Heavymetal")
source("..\\..\\..\\GCCM\\basic.r")
source("..\\..\\..\\GCCM\\GCCM.r")
setwd("E:\\Study\\R\\spatial-causality\\newcodes\\GCCM_updated\\R\\Cases\\raster\\NPP")
source("..\\..\\..\\GCCM\\basic.r")
source("..\\..\\..\\GCCM\\GCCM.r")
